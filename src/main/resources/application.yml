spring:
  application:
    name: electrosign13-back
    version: v1.0.0
  datasource:
    url: jdbc:postgresql://localhost:8126/electrosign
    username: amigoscode
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8090/realms/electrosign
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
      enabled: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: barhamadieng66@gmail.com
    password: pqqi vmkb huvq thow
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG

server:
  port: 8200
  servlet:
    context-path: /api/v1

storage:
  type: local  # Options possibles: local, cloud
  local:
    path: src/main/resources/uploads/ # Chemin local o√π enregistrer les fichiers
  cloud:
    provider: cloudinary # Exemple : s3, firebase, autre
    bucket: my-cloud-bucket

# Configuration de Cloudinary
cloudinary:
  cloud-name: dbq7ldlyx
  api-key: 354527131793645
  api-secret: 1e7NFIZsu3DQ8bHkamyehf0CuQU

keycloak:
  realm: electrosign
  auth-server-url: http://localhost:8090
  use-resource-role-mappings: true
  bearer-only: true
  client-id: electrosign-client
  client-secret: WFNhWhii6mt1rf4Xu8o5Nj4Gm4E4GNYf

keySecret: 34f66de4119f4933b0b22b5b4c997c53

app:
  base-url: http://localhost:8200